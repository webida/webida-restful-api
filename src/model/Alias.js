/**
 * Webida Restful API
 * Restful API for Webida clients to use server's data & features
 *
 * OpenAPI spec version: 0.7.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.WebidaRestfulApi) {
      root.WebidaRestfulApi = {};
    }
    root.WebidaRestfulApi.Alias = factory(root.WebidaRestfulApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The Alias model module.
   * @module model/Alias
   * @version 0.7.1
   */

  /**
   * Constructs a new <code>Alias</code>.
   * alias to access file system using git or direct http(s) requests who can&#39;t call swagger api with proper tokens. Implemenations may provide some concrent url formats. Alias may be invalidated when the workspace it belongs is removed. Any removed alias will result 404 error or equivalent.
   * @alias module:model/Alias
   * @class
   * @param id {String} id, and the path-fragment to access. Since this id is a path-fragment, any unsafe chars for file system path should not be included. Windows OS prohibits following characters.  < (less than)  > (greater than)  : (colon)  \" (double quote)  / (forward slash)  \\ (backslash)  | (vertical bar or pipe)  ? (question mark)  * (asterisk) 
   * @param workspaceId {String} id of the workspace that contains source of alias
   * @param sourcePath {String} the source of alias, relative path to workspace root directory.
   */
  var exports = function(id, workspaceId, sourcePath) {
    var _this = this;

    _this['id'] = id;
    _this['workspaceId'] = workspaceId;
    _this['sourcePath'] = sourcePath;
  };

  /**
   * Constructs a <code>Alias</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Alias} obj Optional instance to populate.
   * @return {module:model/Alias} The populated <code>Alias</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('workspaceId')) {
        obj['workspaceId'] = ApiClient.convertToType(data['workspaceId'], 'String');
      }
      if (data.hasOwnProperty('sourcePath')) {
        obj['sourcePath'] = ApiClient.convertToType(data['sourcePath'], 'String');
      }
    }
    return obj;
  }

  /**
   * id, and the path-fragment to access. Since this id is a path-fragment, any unsafe chars for file system path should not be included. Windows OS prohibits following characters.  < (less than)  > (greater than)  : (colon)  \" (double quote)  / (forward slash)  \\ (backslash)  | (vertical bar or pipe)  ? (question mark)  * (asterisk) 
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * id of the workspace that contains source of alias
   * @member {String} workspaceId
   */
  exports.prototype['workspaceId'] = undefined;
  /**
   * the source of alias, relative path to workspace root directory.
   * @member {String} sourcePath
   */
  exports.prototype['sourcePath'] = undefined;



  return exports;
}));


