/**
 * Webida Restful API
 * Restful API for Webida clients to use server's data & features
 *
 * OpenAPI spec version: 0.2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.WebidaRestfulApi) {
      root.WebidaRestfulApi = {};
    }
    root.WebidaRestfulApi.ChildProcess = factory(root.WebidaRestfulApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The ChildProcess model module.
   * @module model/ChildProcess
   * @version 0.2.0
   */

  /**
   * Constructs a new <code>ChildProcess</code>.
   * a process in execution
   * @alias module:model/ChildProcess
   * @class
   * @param pid {Integer} child process pid
   * @param command {String} the execution command in Execution request
   * @param args {Array.<String>} arguments of the command in Execution request
   * @param executionId {String} execution id from Execution request
   * @param startedAt {Date} the time when this process is spawned
   * @param sync {Array.<String>} true when this process is spawned by synchronous exec request
   */
  var exports = function(pid, command, args, executionId, startedAt, sync) {
    var _this = this;

    _this['pid'] = pid;
    _this['command'] = command;
    _this['args'] = args;
    _this['executionId'] = executionId;
    _this['startedAt'] = startedAt;
    _this['sync'] = sync;
  };

  /**
   * Constructs a <code>ChildProcess</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ChildProcess} obj Optional instance to populate.
   * @return {module:model/ChildProcess} The populated <code>ChildProcess</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('pid')) {
        obj['pid'] = ApiClient.convertToType(data['pid'], 'Integer');
      }
      if (data.hasOwnProperty('command')) {
        obj['command'] = ApiClient.convertToType(data['command'], 'String');
      }
      if (data.hasOwnProperty('args')) {
        obj['args'] = ApiClient.convertToType(data['args'], ['String']);
      }
      if (data.hasOwnProperty('executionId')) {
        obj['executionId'] = ApiClient.convertToType(data['executionId'], 'String');
      }
      if (data.hasOwnProperty('startedAt')) {
        obj['startedAt'] = ApiClient.convertToType(data['startedAt'], 'Date');
      }
      if (data.hasOwnProperty('sync')) {
        obj['sync'] = ApiClient.convertToType(data['sync'], ['String']);
      }
    }
    return obj;
  }

  /**
   * child process pid
   * @member {Integer} pid
   */
  exports.prototype['pid'] = undefined;
  /**
   * the execution command in Execution request
   * @member {String} command
   */
  exports.prototype['command'] = undefined;
  /**
   * arguments of the command in Execution request
   * @member {Array.<String>} args
   */
  exports.prototype['args'] = undefined;
  /**
   * execution id from Execution request
   * @member {String} executionId
   */
  exports.prototype['executionId'] = undefined;
  /**
   * the time when this process is spawned
   * @member {Date} startedAt
   */
  exports.prototype['startedAt'] = undefined;
  /**
   * true when this process is spawned by synchronous exec request
   * @member {Array.<String>} sync
   */
  exports.prototype['sync'] = undefined;



  return exports;
}));


